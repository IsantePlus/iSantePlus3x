version: "3.3"

services:
  ###
  # iSantePlus Server
  ###
  backend:
    container_name: isanteplus
    hostname: backend
    image: ghcr.io/isanteplus/docker-isanteplus-server:pr-19
    restart: unless-stopped
    #platform: linux/amd64
    env_file:
      - ./isanteplus.env
    volumes:
      - /openmrs/data
      #- ./custom_modules:/custom_modules
      #- ./dist:/openmrs/data/frontend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    ports:
    #- "8080:8080"
    - "1044:1044"

  isanteplus-mysql:
    image: ghcr.io/isanteplus/docker-isanteplus-db:pr-6
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --sql_mode=""
    restart: unless-stopped
    container_name: isanteplus-mysql
    hostname: isanteplus-mysql
    #platform: linux/amd64
    healthcheck:
      test: "exit 0"
    environment:
      - MYSQL_DATABASE=openmrs
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
      - MYSQL_ROOT_HOST=% # Allow docker containers to connect to mysql
    volumes:
    #  - ./mysql.cnf:/etc/mysql/conf.d/custom.cnf # mysql config preconfigured to allow binlog/debezium
      - mysql-data:/var/lib/mysql
     # - ./dump:/docker-entrypoint-initdb.d 
    ports:
    - "3306:3306"

  gateway:
    image: openmrs/openmrs-reference-application-3-gateway:nightly
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"

  frontend:
    image: openmrs/openmrs-reference-application-3-frontend:nightly
    environment:
      SPA_PATH: /openmrs/spa
      API_URL: /openmrs
      SPA_CONFIG_URLS: /openmrs/spa/config.json
    volumes:
       - ./config.json:/usr/share/nginx/html/config.json
       - ./build-config.json:/usr/share/nginx/html/importmap.json
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]


volumes:
  mysql-data:
